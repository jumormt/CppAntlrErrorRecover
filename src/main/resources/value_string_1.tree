(translationunit (declarationseq (declaration (functiondefinition (declspecifierseq (declspecifier (typespecifier (trailingtypespecifier (cvqualifier const)))) (declspecifierseq (declspecifier (typespecifier (trailingtypespecifier (simpletypespecifier char)))))) (declarator (ptrdeclarator (ptroperator *) (ptrdeclarator (noptrdeclarator (noptrdeclarator (declaratorid (idexpression (unqualifiedid decode_enumerated_bitfield_shifted)))) (parametersandqualifiers ( (parameterdeclarationclause (parameterdeclarationlist (parameterdeclarationlist (parameterdeclarationlist (parameterdeclarationlist (parameterdeclarationlist (parameterdeclaration (declspecifierseq (declspecifier (typespecifier (trailingtypespecifier (simpletypespecifier (thetypename (classname guint32))))))) (declarator (ptrdeclarator (noptrdeclarator (declaratorid (idexpression (unqualifiedid val)))))))) , (parameterdeclaration (declspecifierseq (declspecifier (typespecifier (trailingtypespecifier (simpletypespecifier (thetypename (classname guint32))))))) (declarator (ptrdeclarator (noptrdeclarator (declaratorid (idexpression (unqualifiedid mask)))))))) , (parameterdeclaration (declspecifierseq (declspecifier (typespecifier (trailingtypespecifier (simpletypespecifier int))))) (declarator (ptrdeclarator (noptrdeclarator (declaratorid (idexpression (unqualifiedid width)))))))) , (parameterdeclaration (declspecifierseq (declspecifier (typespecifier (trailingtypespecifier (cvqualifier const)))) (declspecifierseq (declspecifier (typespecifier (trailingtypespecifier (simpletypespecifier (thetypename (classname value_string)))))))) (declarator (ptrdeclarator (ptroperator *) (ptrdeclarator (noptrdeclarator (declaratorid (idexpression (unqualifiedid tab))))))))) , (parameterdeclaration (declspecifierseq (declspecifier (typespecifier (trailingtypespecifier (cvqualifier const)))) (declspecifierseq (declspecifier (typespecifier (trailingtypespecifier (simpletypespecifier char)))))) (declarator (ptrdeclarator (ptroperator *) (ptrdeclarator (noptrdeclarator (declaratorid (idexpression (unqualifiedid fmt)))))))))) )))))) (functionbody (compoundstatement { (statementseq (statementseq (statementseq (statementseq (statementseq (statementseq (statementseq (statementseq (statementseq (statementseq (statementseq (statementseq (statementseq (statementseq (statementseq (statementseq (statementseq (statementseq (statementseq (statementseq (statementseq (statement (declarationstatement (blockdeclaration (simpledeclaration (declspecifierseq (declspecifier (storageclassspecifier static)) (declspecifierseq (declspecifier (typespecifier (trailingtypespecifier (simpletypespecifier char)))))) (initdeclaratorlist (initdeclarator (declarator (ptrdeclarator (noptrdeclarator (noptrdeclarator (declaratorid (idexpression (unqualifiedid buf)))) [ (constantexpression (conditionalexpression (logicalorexpression (logicalandexpression (inclusiveorexpression (exclusiveorexpression (andexpression (equalityexpression (relationalexpression (shiftexpression (additiveexpression (multiplicativeexpression (pmexpression (castexpression (unaryexpression (postfixexpression (primaryexpression (literal 1025)))))))))))))))))) ]))))) ;))))) (statement (declarationstatement (blockdeclaration (simpledeclaration (declspecifierseq (declspecifier (typespecifier (trailingtypespecifier (simpletypespecifier char))))) (initdeclaratorlist (initdeclarator (declarator (ptrdeclarator (ptroperator *) (ptrdeclarator (noptrdeclarator (declaratorid (idexpression (unqualifiedid p))))))))) ;))))) (statement (declarationstatement (blockdeclaration (simpledeclaration (declspecifierseq (declspecifier (typespecifier (trailingtypespecifier (simpletypespecifier int))))) (initdeclaratorlist (initdeclarator (declarator (ptrdeclarator (noptrdeclarator (declaratorid (idexpression (unqualifiedid shift)))))) (initializer (braceorequalinitializer = (initializerclause (assignmentexpression (conditionalexpression (logicalorexpression (logicalandexpression (inclusiveorexpression (exclusiveorexpression (andexpression (equalityexpression (relationalexpression (shiftexpression (additiveexpression (multiplicativeexpression (pmexpression (castexpression (unaryexpression (postfixexpression (primaryexpression (literal 0))))))))))))))))))))))) ;))))) (statement (iterationstatement while ( (condition (expression (assignmentexpression (conditionalexpression (logicalorexpression (logicalandexpression (inclusiveorexpression (exclusiveorexpression (andexpression (equalityexpression (equalityexpression (relationalexpression (shiftexpression (additiveexpression (multiplicativeexpression (pmexpression (castexpression (unaryexpression (postfixexpression (primaryexpression ( (expression (assignmentexpression (conditionalexpression (logicalorexpression (logicalandexpression (inclusiveorexpression (exclusiveorexpression (andexpression (equalityexpression (relationalexpression (shiftexpression (shiftexpression (additiveexpression (multiplicativeexpression (pmexpression (castexpression (unaryexpression (postfixexpression (primaryexpression (idexpression (unqualifiedid mask)))))))))) rightShift (additiveexpression (multiplicativeexpression (pmexpression (castexpression (unaryexpression (unaryoperator &) (castexpression (unaryexpression (postfixexpression (primaryexpression ( (expression (assignmentexpression (conditionalexpression (logicalorexpression (logicalandexpression (inclusiveorexpression (exclusiveorexpression (andexpression (equalityexpression (relationalexpression (shiftexpression (shiftexpression (additiveexpression (multiplicativeexpression (pmexpression (castexpression (unaryexpression (postfixexpression (primaryexpression (literal 1))))))))) << (additiveexpression (multiplicativeexpression (pmexpression (castexpression (unaryexpression (postfixexpression (primaryexpression (idexpression (unqualifiedid shift)))))))))))))))))))) ))))))))))))))))))))) ))))))))))) == (relationalexpression (shiftexpression (additiveexpression (multiplicativeexpression (pmexpression (castexpression (unaryexpression (postfixexpression (primaryexpression (literal 0)))))))))))))))))))) ) (statement (expressionstatement (expression (assignmentexpression (conditionalexpression (logicalorexpression (logicalandexpression (inclusiveorexpression (exclusiveorexpression (andexpression (equalityexpression (relationalexpression (shiftexpression (additiveexpression (multiplicativeexpression (pmexpression (castexpression (unaryexpression (postfixexpression (postfixexpression (primaryexpression (idexpression (unqualifiedid shift)))) ++))))))))))))))))) ;))))) (statement (expressionstatement (expression (assignmentexpression (logicalorexpression (logicalandexpression (inclusiveorexpression (exclusiveorexpression (andexpression (equalityexpression (relationalexpression (shiftexpression (additiveexpression (multiplicativeexpression (pmexpression (castexpression (unaryexpression (postfixexpression (primaryexpression (idexpression (unqualifiedid p))))))))))))))))) (assignmentoperator =) (initializerclause (assignmentexpression (conditionalexpression (logicalorexpression (logicalandexpression (inclusiveorexpression (exclusiveorexpression (andexpression (equalityexpression (relationalexpression (shiftexpression (additiveexpression (multiplicativeexpression (pmexpression (castexpression (unaryexpression (postfixexpression (postfixexpression (primaryexpression (idexpression (unqualifiedid decode_bitfield_value)))) ( (expressionlist (initializerlist (initializerlist (initializerlist (initializerlist (initializerclause (assignmentexpression (conditionalexpression (logicalorexpression (logicalandexpression (inclusiveorexpression (exclusiveorexpression (andexpression (equalityexpression (relationalexpression (shiftexpression (additiveexpression (multiplicativeexpression (pmexpression (castexpression (unaryexpression (postfixexpression (primaryexpression (idexpression (unqualifiedid buf))))))))))))))))))))) , (initializerclause (assignmentexpression (conditionalexpression (logicalorexpression (logicalandexpression (inclusiveorexpression (exclusiveorexpression (andexpression (equalityexpression (relationalexpression (shiftexpression (additiveexpression (multiplicativeexpression (pmexpression (castexpression (unaryexpression (postfixexpression (primaryexpression (idexpression (unqualifiedid val))))))))))))))))))))) , (initializerclause (assignmentexpression (conditionalexpression (logicalorexpression (logicalandexpression (inclusiveorexpression (exclusiveorexpression (andexpression (equalityexpression (relationalexpression (shiftexpression (additiveexpression (multiplicativeexpression (pmexpression (castexpression (unaryexpression (postfixexpression (primaryexpression (idexpression (unqualifiedid mask))))))))))))))))))))) , (initializerclause (assignmentexpression (conditionalexpression (logicalorexpression (logicalandexpression (inclusiveorexpression (exclusiveorexpression (andexpression (equalityexpression (relationalexpression (shiftexpression (additiveexpression (multiplicativeexpression (pmexpression (castexpression (unaryexpression (postfixexpression (primaryexpression (idexpression (unqualifiedid width)))))))))))))))))))))) )))))))))))))))))))) ;))) statement) (statement g_snprintf)) (statement (expressionstatement (expression assignmentexpression) <missing ';'>))) (statement (expressionstatement (expression (assignmentexpression ()) <missing ';'>))) (statement p ,)) statement) (statement ()) (statement gulong ))) (statement (expressionstatement (expression (expression (expression (assignmentexpression (conditionalexpression (logicalorexpression (logicalandexpression (inclusiveorexpression (exclusiveorexpression (andexpression (equalityexpression (relationalexpression (shiftexpression (additiveexpression (multiplicativeexpression (pmexpression (castexpression (unaryexpression (postfixexpression (primaryexpression ( (expression (assignmentexpression (conditionalexpression (logicalorexpression (logicalandexpression (inclusiveorexpression (exclusiveorexpression (andexpression (equalityexpression (relationalexpression (shiftexpression (additiveexpression (additiveexpression (multiplicativeexpression (pmexpression (castexpression (unaryexpression (postfixexpression (primaryexpression (literal 1024)))))))) - (multiplicativeexpression (pmexpression (castexpression (unaryexpression (postfixexpression (primaryexpression ( (expression (assignmentexpression (conditionalexpression (logicalorexpression (logicalandexpression (inclusiveorexpression (exclusiveorexpression (andexpression (equalityexpression (relationalexpression (shiftexpression (additiveexpression (additiveexpression (multiplicativeexpression (pmexpression (castexpression (unaryexpression (postfixexpression (primaryexpression (idexpression (unqualifiedid p))))))))) - (multiplicativeexpression (pmexpression (castexpression (unaryexpression (postfixexpression (primaryexpression (idexpression (unqualifiedid buf)))))))))))))))))))) ))))))))))))))))))) ))))))))))))))))))) , (assignmentexpression (conditionalexpression (logicalorexpression (logicalandexpression (inclusiveorexpression (exclusiveorexpression (andexpression (equalityexpression (relationalexpression (shiftexpression (additiveexpression (multiplicativeexpression (pmexpression (castexpression (unaryexpression (postfixexpression (primaryexpression (idexpression (unqualifiedid fmt)))))))))))))))))))) , assignmentexpression) <missing ';'>))) statement) (statement val_to_str)) (statement (expressionstatement (expression (assignmentexpression ()) <missing ';'>))) (statement (expressionstatement (expression (assignmentexpression (conditionalexpression (logicalorexpression (logicalandexpression (inclusiveorexpression (exclusiveorexpression (andexpression (equalityexpression (relationalexpression (shiftexpression (additiveexpression (multiplicativeexpression (pmexpression (castexpression (unaryexpression (postfixexpression (primaryexpression ( (expression (assignmentexpression (conditionalexpression (logicalorexpression (logicalandexpression (inclusiveorexpression (exclusiveorexpression (andexpression (equalityexpression (relationalexpression (shiftexpression (shiftexpression (additiveexpression (multiplicativeexpression (pmexpression (castexpression (unaryexpression (postfixexpression (primaryexpression (idexpression (unqualifiedid val)))))))))) rightShift (additiveexpression (multiplicativeexpression (pmexpression (castexpression (unaryexpression (unaryoperator &) (castexpression (unaryexpression (postfixexpression (primaryexpression (idexpression (unqualifiedid mask)))))))))))))))))))))) ))))))))))))))))))) > >))) (statement (expressionstatement (expression (expression (expression (assignmentexpression (conditionalexpression (logicalorexpression (logicalandexpression (inclusiveorexpression (exclusiveorexpression (andexpression (equalityexpression (relationalexpression (shiftexpression (additiveexpression (multiplicativeexpression (pmexpression (castexpression (unaryexpression (postfixexpression (primaryexpression (idexpression (unqualifiedid shift)))))))))))))))))))) , (assignmentexpression (conditionalexpression (logicalorexpression (logicalandexpression (inclusiveorexpression (exclusiveorexpression (andexpression (equalityexpression (relationalexpression (shiftexpression (additiveexpression (multiplicativeexpression (pmexpression (castexpression (unaryexpression (postfixexpression (primaryexpression (idexpression (unqualifiedid tab)))))))))))))))))))) , (assignmentexpression (conditionalexpression (logicalorexpression (logicalandexpression (inclusiveorexpression (exclusiveorexpression (andexpression (equalityexpression (relationalexpression (shiftexpression (additiveexpression (multiplicativeexpression (pmexpression (castexpression (unaryexpression (postfixexpression (primaryexpression (literal "Unknown"))))))))))))))))))) ) )))) (statement (expressionstatement ;))) (statement (jumpstatement return (expression (assignmentexpression (conditionalexpression (logicalorexpression (logicalandexpression (inclusiveorexpression (exclusiveorexpression (andexpression (equalityexpression (relationalexpression (shiftexpression (additiveexpression (multiplicativeexpression (pmexpression (castexpression (unaryexpression (postfixexpression (primaryexpression (idexpression (unqualifiedid buf)))))))))))))))))))) ;))) }))))) <EOF>)
